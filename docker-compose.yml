version: '3.8'

services:
  # Main web application
  grabit-auth:
    build: .
    container_name: grabit-auth-app
    ports:
      - "8080:80"
    networks:
      - grabit-network
    volumes:
      - ./logs:/var/log/nginx
    environment:
      - ENVIRONMENT=development
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a simple database for user analytics (bonus feature)
  postgres:
    image: postgres:13-alpine
    container_name: grabit-postgres
    environment:
      POSTGRES_DB: grabit_analytics
      POSTGRES_USER: grabit_user
      POSTGRES_PASSWORD: secure_password_123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - grabit-network
    restart: unless-stopped

  # Optional: Redis for session management (bonus feature)
  redis:
    image: redis:6-alpine
    container_name: grabit-redis
    ports:
      - "6379:6379"
    networks:
      - grabit-network
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # Nginx reverse proxy (production setup)
  nginx-proxy:
    image: nginx:alpine
    container_name: grabit-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - grabit-auth
    networks:
      - grabit-network
    restart: unless-stopped

networks:
  grabit-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: